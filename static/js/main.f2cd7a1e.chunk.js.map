{"version":3,"sources":["components/NavigationBar.js","components/DataView.js","components/CrossTabView.js","components/ChartView.js","components/FieldSelect.js","components/DataPage.js","App.js","index.js"],"names":["React","Component","DataView","this","props","selectedQuestion","id","elementId","selectedGroup","data","renderFunction","CrossTabView","survey","renderCrossTabs","console","log","cleanData","map","x","group","response","numeric","$","pivot","rows","aggregator","pivotUtilities","aggregators","cols","ChartView","renderChart","renderer","c3_renderers","rowOrder","colOrder","document","getElementById","getElementsByTagName","remove","FieldSelect","options","dict","optionComponents","Object","keys","key","option","value","title","selectedDescription","selected","description","className","size","onChange","handleSelect","dangerouslySetInnerHTML","__html","DataPage","state","undefined","selectedTopic","handleGroupSelect","bind","handleTopicSelect","handleQuestionSelect","surveys","surveyId","Error","groups","topics","questions","surveyData","d3","csv","process","then","setState","event","target","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f2cd7a1e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class NavigationBar extends React.Component { \n    componentDidMount() {\n\n    }\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nexport default class DataView extends React.Component {\n    render() {\n        if(!this.props.selectedQuestion) {\n            return null;\n        }\n        return (\n            <div id = {this.props.elementId}></div>\n        )\n    }\n\n    componentDidUpdate() {\n        let selectedGroup = this.props.selectedGroup;\n        let selectedQuestion = this.props.selectedQuestion; \n        let data = this.props.data; \n        let renderFunction = this.props.renderFunction;\n        if (selectedGroup && selectedQuestion && data) {\n            renderFunction(this.props.elementId, selectedGroup, selectedQuestion, data);\n        }\n    }\n}","import React from 'react'\nimport DataView from './DataView'\n\nexport default class CrossTabView extends React.Component {\n    render() {\n        return <DataView \n                    elementId = \"crosstab\" \n                    survey = { this.props.survey }\n                    data = { this.props.data }\n                    selectedGroup = { this.props.selectedGroup }\n                    selectedQuestion = { this.props.selectedQuestion }\n                    renderFunction = { this.renderCrossTabs }\n                />\n    }\n\n    renderCrossTabs(elementId, selectedGroup, selectedQuestion, data) {\n        console.log(`SELECTED GROUP: ${selectedGroup}`);\n        console.log(`SELECTED QUESTION: ${selectedQuestion}`);\n        let cleanData = data.map((x) => { return {group : x[selectedGroup.id], response : x[selectedQuestion.id] || \" No Response\"} });\n        console.log(cleanData);\n        if(selectedQuestion.numeric) {\n            $(`#${elementId}`).pivot(cleanData, \n                {\n                    rows : [\"group\"],\n                    aggregator: $.pivotUtilities.aggregators[\"Average\"]([\"response\"])\n                });\n        }\n        else {\n            $(`#${elementId}`).pivot(cleanData, \n                {\n                    rows : [\"group\"],\n                    cols: [\"response\"],\n                    aggregator: $.pivotUtilities.aggregators[\"Count\"]()\n                });\n        }\n    }\n}","import React from 'react'\nimport DataView from './DataView'\n\nexport default class ChartView extends React.Component { \n    render() {\n        return <DataView\n                    elementId = \"chart\"\n                    survey = { this.props.survey }\n                    data = { this.props.data }\n                    selectedGroup = { this.props.selectedGroup }\n                    selectedQuestion = { this.props.selectedQuestion }\n                    renderFunction = { this.renderChart }\n                />\n    }\n\n    renderChart(elementId, selectedGroup, selectedQuestion, data) {\n        if(selectedQuestion.numeric) {\n            $(`#${elementId}`).pivot(cleanData, \n                {\n                    rows : [selectedGroup.id],\n                    aggregator: $.pivotUtilities.aggregators[\"Average\"]([\"response\"]),\n                    renderer: $.pivotUtilities.c3_renderers[\"Horizontal Bar Chart\"],\n                    rowOrder: \"value_z_to_a\"\n                });\n        }\n        else { \n            $(`#${elementId}`).pivot(data, {\n                rows : [selectedGroup.id],\n                cols: [selectedQuestion.id],\n                aggregator: $.pivotUtilities.aggregators[\"Count as Fraction of Rows\"](),\n                renderer: $.pivotUtilities.c3_renderers[\"Horizontal Stacked Bar Chart\"],\n                rowOrder: \"value_z_to_a\", colOrder: \"value_z_to_a\",\n            });\n            document.getElementById(\"chart\").getElementsByTagName(\"p\")[0].remove();\n        }\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/FieldSelect.css'\n\nexport default class FieldSelect extends React.Component { \n    render() {\n        if(!this.props.options) {\n            return null;\n        }\n        let optionComponents = getValues(this.props.options).map((option) => {\n            return <option value = {option.id}>{option.title}</option>\n        });\n        let selectedDescription = this.props.selected ? this.props.options[this.props.selected].description : \"\";\n        return (\n            <div>\n                <div className = \"row\">\n                    <h4>{this.props.title}</h4>\n                </div>\n                <div className = \"row\">\n                    <span>{this.props.description}</span>\n                </div>\n                <div className = \"row\">\n                    <div className = \"col-md-4\">\n                        <select className = \"pull-left\" size = {6} value = {this.props.selected} onChange={this.props.handleSelect}>\n                            {optionComponents}\n                        </select>\n                    </div>\n                    <div className = \"col-md\">\n                        <span className = \"align-top align-text-top\" dangerouslySetInnerHTML={{__html : selectedDescription}}>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction getValues(dict) {\n    return Object.keys(dict).map(key => dict[key])\n}\n\nFieldSelect.propTypes = { \n    title : PropTypes.string,\n\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CrossTabView from './CrossTabView'\nimport ChartView from './ChartView'\nimport FieldSelect from './FieldSelect'\nimport { surveys, groups } from '../config/fields.json'\n\nexport default class DataPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedGroup : undefined,\n            selectedTopic : undefined,\n            selectedQuestion : undefined\n        }\n        this.handleGroupSelect = this.handleGroupSelect.bind(this);\n        this.handleTopicSelect = this.handleTopicSelect.bind(this);\n        this.handleQuestionSelect = this.handleQuestionSelect.bind(this); \n    }\n    componentWillMount() {\n        this.survey = surveys[this.props.surveyId];\n    }\n\n    render() {\n        if (this.props.surveyId == null) {\n            throw new Error(\"Expected a survey id\");\n        }\n        return (\n            <div className = \"container\">\n                <FieldSelect \n                    title = \"Group\"\n                    description = \"Select how you would like to group responses\"\n                    options = { groups }\n                    selected = {this.state.selectedGroup}\n                    handleSelect = {this.handleGroupSelect}\n                />\n                <FieldSelect\n                    title = \"Topic\"\n                    description = \"Select a topic that you would like to examine\"\n                    options = { this.survey.topics }\n                    selected = {this.state.selectedTopic}\n                    handleSelect = {this.handleTopicSelect}\n                />\n                <FieldSelect\n                    title = \"Question\"\n                    description = \"Select a question to examine\"\n                    options = {this.state.selectedTopic ? \n                        this.survey.topics[this.state.selectedTopic].questions :\n                        null\n                    }\n                    selected = {this.state.selectedQuestion}\n                    handleSelect = {this.handleQuestionSelect}\n                />\n                <div className = \"row\">\n                    <ChartView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n                <div className = \"row\">\n                    <CrossTabView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        d3.csv(`${process.env.PUBLIC_URL}/data/data_${this.props.surveyId}.csv`).then((data) => {\n          this.setState({\n            surveyData : data\n          })\n        });\n      }\n\n    handleGroupSelect(event) {\n        this.setState({\n            selectedGroup : event.target.value\n        })\n    }\n\n    handleTopicSelect(event) {\n        this.setState({\n            selectedTopic : event.target.value,\n            selectedQuestion : undefined\n        })\n    }\n    \n    handleQuestionSelect(event) {\n        this.setState({\n            selectedQuestion : event.target.value\n        })\n    }\n}\n\nDataPage.propTypes = {\n    survey : PropTypes.object\n}","import React from 'react';\nimport './App.css';\nimport {groups, surveys} from './config/fields.json'\nimport NavigationBar from './components/NavigationBar'\nimport DataPage from './components/DataPage'\n\n\nclass App extends React.Component {\n  constructor() {\n    super(); \n    this.state = {\n      surveyData : null,\n      selectedGroup : null,\n      selectedQuestion : null\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <DataPage\n          surveyId = \"income_survey\"\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    console.log(`${process.env.PUBLIC_URL}/data/data_income_survey.csv`);\n    d3.csv(`${process.env.PUBLIC_URL}/data/data_income_survey.csv`).then((data) => {\n      console.log(data);\n      this.setState({\n        surveyData : data,\n        selectedGroup : \"income\",\n        selectedQuestion : \"Q06006_en\"\n      })\n    });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}