{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/DataPage.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CrossTabView from './CrossTabView';\nimport ChartView from './ChartView';\nimport FieldSelect from './FieldSelect';\nimport { surveys, groups } from '../config/fields.json';\nimport NotFound from './NotFound';\nexport default class DataPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedGroup: undefined,\n      selectedTopic: undefined,\n      selectedQuestion: undefined\n    };\n    this.handleGroupSelect = this.handleGroupSelect.bind(this);\n    this.handleTopicSelect = this.handleTopicSelect.bind(this);\n    this.handleQuestionSelect = this.handleQuestionSelect.bind(this);\n  }\n\n  componentWillMount() {\n    this.surveyId = this.props.match.params.surveyId;\n\n    if (this.surveyId && this.surveyId in surveys) {\n      this.survey = surveys[this.surveyId];\n    }\n  }\n\n  render() {\n    if (!this.survey) {\n      return React.createElement(NotFound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FieldSelect, {\n      title: \"Group\",\n      description: \"Select how you would like to group responses\",\n      options: groups,\n      selected: this.state.selectedGroup,\n      handleSelect: this.handleGroupSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FieldSelect, {\n      title: \"Topic\",\n      description: \"Select a topic that you would like to examine\",\n      options: this.survey.topics,\n      selected: this.state.selectedTopic,\n      handleSelect: this.handleTopicSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(FieldSelect, {\n      title: \"Question\",\n      description: \"Select a question to examine\",\n      options: this.state.selectedTopic ? this.survey.topics[this.state.selectedTopic].questions : null,\n      selected: this.state.selectedQuestion,\n      handleSelect: this.handleQuestionSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ChartView, {\n      survey: this.survey,\n      data: this.state.surveyData,\n      selectedGroup: groups[this.state.selectedGroup],\n      selectedQuestion: this.state.selectedQuestion ? this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CrossTabView, {\n      survey: this.survey,\n      data: this.state.surveyData,\n      selectedGroup: groups[this.state.selectedGroup],\n      selectedQuestion: this.state.selectedQuestion ? this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    if (!this.survey) {\n      return;\n    }\n\n    document.title = this.survey.title;\n    d3.csv(`${process.env.PUBLIC_URL}/data/data_${this.surveyId}.csv`).then(data => {\n      this.setState({\n        surveyData: data\n      });\n    });\n  }\n\n  handleGroupSelect(event) {\n    this.setState({\n      selectedGroup: event.target.value\n    });\n  }\n\n  handleTopicSelect(event) {\n    this.setState({\n      selectedTopic: event.target.value,\n      selectedQuestion: undefined\n    });\n  }\n\n  handleQuestionSelect(event) {\n    this.setState({\n      selectedQuestion: event.target.value\n    });\n  }\n\n}\nDataPage.propTypes = {\n  survey: PropTypes.object\n};","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/DataPage.js"],"names":["React","PropTypes","CrossTabView","ChartView","FieldSelect","surveys","groups","NotFound","DataPage","Component","constructor","state","selectedGroup","undefined","selectedTopic","selectedQuestion","handleGroupSelect","bind","handleTopicSelect","handleQuestionSelect","componentWillMount","surveyId","props","match","params","survey","render","topics","questions","surveyData","componentDidMount","document","title","d3","csv","process","env","PUBLIC_URL","then","data","setState","event","target","value","propTypes","object"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport CrossTabView from './CrossTabView'\nimport ChartView from './ChartView'\nimport FieldSelect from './FieldSelect'\nimport { surveys, groups } from '../config/fields.json'\nimport NotFound from './NotFound'\n\nexport default class DataPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedGroup : undefined,\n            selectedTopic : undefined,\n            selectedQuestion : undefined\n        }\n        this.handleGroupSelect = this.handleGroupSelect.bind(this);\n        this.handleTopicSelect = this.handleTopicSelect.bind(this);\n        this.handleQuestionSelect = this.handleQuestionSelect.bind(this); \n    }\n    componentWillMount() {\n        this.surveyId = this.props.match.params.surveyId;\n        if (this.surveyId && this.surveyId in surveys) {\n            this.survey = surveys[this.surveyId];\n        }\n    }\n\n    render() {\n        if(!this.survey) {\n            return <NotFound />\n        }\n        return (\n            <div className = \"container-fluid\">\n                <div className = \"row\">\n                    <div className = \"col-md-6\">\n                        <FieldSelect \n                            title = \"Group\"\n                            description = \"Select how you would like to group responses\"\n                            options = { groups }\n                            selected = {this.state.selectedGroup}\n                            handleSelect = {this.handleGroupSelect}\n                        />\n                    </div>\n                    <div className = \"col-md-6\">\n                        <FieldSelect\n                            title = \"Topic\"\n                            description = \"Select a topic that you would like to examine\"\n                            options = { this.survey.topics }\n                            selected = {this.state.selectedTopic}\n                            handleSelect = {this.handleTopicSelect}\n                        />\n                    </div>\n                    <div className = \"col-md-6\">\n                        <FieldSelect\n                            title = \"Question\"\n                            description = \"Select a question to examine\"\n                            options = {this.state.selectedTopic ? \n                                this.survey.topics[this.state.selectedTopic].questions :\n                                null\n                            }\n                            selected = {this.state.selectedQuestion}\n                            handleSelect = {this.handleQuestionSelect}\n                        />\n                    </div>\n                </div>\n                \n                <div className = \"row\">\n                    <ChartView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n                <div className = \"row\">\n                    <CrossTabView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        if(!this.survey){\n            return;\n        }\n        document.title = this.survey.title;\n        d3.csv(`${process.env.PUBLIC_URL}/data/data_${this.surveyId}.csv`).then((data) => {\n          this.setState({\n            surveyData : data\n          })\n        });\n      }\n\n    handleGroupSelect(event) {\n        this.setState({\n            selectedGroup : event.target.value\n        })\n    }\n\n    handleTopicSelect(event) {\n        this.setState({\n            selectedTopic : event.target.value,\n            selectedQuestion : undefined\n        })\n    }\n    \n    handleQuestionSelect(event) {\n        this.setState({\n            selectedQuestion : event.target.value\n        })\n    }\n}\n\nDataPage.propTypes = {\n    survey : PropTypes.object\n}"]},"metadata":{},"sourceType":"module"}