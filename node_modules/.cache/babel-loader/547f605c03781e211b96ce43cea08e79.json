{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/ChartView.js\";\nimport React from 'react';\nimport DataView from './DataView';\nexport default class ChartView extends React.Component {\n  render() {\n    return React.createElement(DataView, {\n      elementId: \"chart\",\n      survey: this.props.survey,\n      data: this.props.data,\n      selectedGroup: this.props.selectedGroup,\n      selectedQuestion: this.props.selectedQuestion,\n      renderFunction: this.renderChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    });\n  }\n\n  renderChart(elementId, selectedGroup, selectedQuestion, data, survey) {\n    if (survey.questions[selectedQuestion].numeric) {} else {\n      if (fields[selectedFields.content].numeric) {} else {\n        $(`#${elementId}`).pivot(data, {\n          rows: [selectedGroup],\n          cols: [selectedQuestion],\n          aggregator: $.pivotUtilities.aggregators[\"Count as Fraction of Rows\"](),\n          renderer: $.pivotUtilities.c3_renderers[\"Horizontal Stacked Bar Chart\"],\n          rowOrder: \"value_z_to_a\",\n          colOrder: \"value_z_to_a\"\n        });\n        document.getElementById(\"chart\").getElementsByTagName(\"p\")[0].remove();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/ChartView.js"],"names":["React","DataView","ChartView","Component","render","props","survey","data","selectedGroup","selectedQuestion","renderChart","elementId","questions","numeric","fields","selectedFields","content","$","pivot","rows","cols","aggregator","pivotUtilities","aggregators","renderer","c3_renderers","rowOrder","colOrder","document","getElementById","getElementsByTagName","remove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACnDC,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,QAAD;AACK,MAAA,SAAS,EAAG,OADjB;AAEK,MAAA,MAAM,EAAK,KAAKC,KAAL,CAAWC,MAF3B;AAGK,MAAA,IAAI,EAAK,KAAKD,KAAL,CAAWE,IAHzB;AAIK,MAAA,aAAa,EAAK,KAAKF,KAAL,CAAWG,aAJlC;AAKK,MAAA,gBAAgB,EAAK,KAAKH,KAAL,CAAWI,gBALrC;AAMK,MAAA,cAAc,EAAK,KAAKC,WAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAQH;;AAEDA,EAAAA,WAAW,CAACC,SAAD,EAAYH,aAAZ,EAA2BC,gBAA3B,EAA6CF,IAA7C,EAAmDD,MAAnD,EAA2D;AAClE,QAAGA,MAAM,CAACM,SAAP,CAAiBH,gBAAjB,EAAmCI,OAAtC,EAA+C,CAE9C,CAFD,MAGK;AACD,UAAGC,MAAM,CAACC,cAAc,CAACC,OAAhB,CAAN,CAA+BH,OAAlC,EAA2C,CAE1C,CAFD,MAGK;AACDI,QAAAA,CAAC,CAAE,IAAGN,SAAU,EAAf,CAAD,CAAmBO,KAAnB,CAAyBX,IAAzB,EAA+B;AAC3BY,UAAAA,IAAI,EAAG,CAACX,aAAD,CADoB;AAE3BY,UAAAA,IAAI,EAAE,CAACX,gBAAD,CAFqB;AAG3BY,UAAAA,UAAU,EAAEJ,CAAC,CAACK,cAAF,CAAiBC,WAAjB,CAA6B,2BAA7B,GAHe;AAI3BC,UAAAA,QAAQ,EAAEP,CAAC,CAACK,cAAF,CAAiBG,YAAjB,CAA8B,8BAA9B,CAJiB;AAK3BC,UAAAA,QAAQ,EAAE,cALiB;AAKDC,UAAAA,QAAQ,EAAE;AALT,SAA/B;AAOAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,oBAAjC,CAAsD,GAAtD,EAA2D,CAA3D,EAA8DC,MAA9D;AACH;AACJ;AACJ;;AA/BkD","sourcesContent":["import React from 'react'\nimport DataView from './DataView'\n\nexport default class ChartView extends React.Component { \n    render() {\n        return <DataView\n                    elementId = \"chart\"\n                    survey = { this.props.survey }\n                    data = { this.props.data }\n                    selectedGroup = { this.props.selectedGroup }\n                    selectedQuestion = { this.props.selectedQuestion }\n                    renderFunction = { this.renderChart }\n                />\n    }\n\n    renderChart(elementId, selectedGroup, selectedQuestion, data, survey) {\n        if(survey.questions[selectedQuestion].numeric) {\n\n        }\n        else { \n            if(fields[selectedFields.content].numeric) {\n\n            }\n            else {\n                $(`#${elementId}`).pivot(data, {\n                    rows : [selectedGroup],\n                    cols: [selectedQuestion],\n                    aggregator: $.pivotUtilities.aggregators[\"Count as Fraction of Rows\"](),\n                    renderer: $.pivotUtilities.c3_renderers[\"Horizontal Stacked Bar Chart\"],\n                    rowOrder: \"value_z_to_a\", colOrder: \"value_z_to_a\",\n                });\n                document.getElementById(\"chart\").getElementsByTagName(\"p\")[0].remove();\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}