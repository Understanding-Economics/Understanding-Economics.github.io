{"ast":null,"code":"var _jsxFileName = \"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/DataView.js\";\nimport React, { Component } from 'react';\nexport default class DataView extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: this.props.elementId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    });\n  }\n\n  componentDidUpdate() {\n    let selectedGroup = this.props.selectedGroup;\n    let selectedQuestion = this.props.selectedQuestion;\n    let data = this.props.data;\n    let fields = this.props.fields;\n    let renderFunction = this.props.renderFunction;\n\n    if (selectedGroup && selectedQuestion && data) {\n      renderFunction(this.props.elementId, selectedGroup, selectedQuestion, data, fields);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/DataView.js"],"names":["React","Component","DataView","render","props","elementId","componentDidUpdate","selectedGroup","selectedQuestion","data","fields","renderFunction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC5CE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAI,KAAKC,KAAL,CAAWC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,aAAa,GAAG,KAAKH,KAAL,CAAWG,aAA/B;AACA,QAAIC,gBAAgB,GAAG,KAAKJ,KAAL,CAAWI,gBAAlC;AACA,QAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAtB;AACA,QAAIC,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;AACA,QAAIC,cAAc,GAAG,KAAKP,KAAL,CAAWO,cAAhC;;AACA,QAAIJ,aAAa,IAAIC,gBAAjB,IAAqCC,IAAzC,EAA+C;AAC3CE,MAAAA,cAAc,CAAC,KAAKP,KAAL,CAAWC,SAAZ,EAAuBE,aAAvB,EAAsCC,gBAAtC,EAAwDC,IAAxD,EAA8DC,MAA9D,CAAd;AACH;AACJ;;AAhB2C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class DataView extends Component {\n    render() {\n        return (\n            <div id = {this.props.elementId}></div>\n        )\n    }\n\n    componentDidUpdate() {\n        let selectedGroup = this.props.selectedGroup;\n        let selectedQuestion = this.props.selectedQuestion; \n        let data = this.props.data; \n        let fields = this.props.fields; \n        let renderFunction = this.props.renderFunction;\n        if (selectedGroup && selectedQuestion && data) {\n            renderFunction(this.props.elementId, selectedGroup, selectedQuestion, data, fields);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}