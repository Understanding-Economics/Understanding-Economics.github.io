{"ast":null,"code":"import _classCallCheck from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import DataView from'./DataView';var CrossTabView=/*#__PURE__*/function(_React$Component){_inherits(CrossTabView,_React$Component);function CrossTabView(){_classCallCheck(this,CrossTabView);return _possibleConstructorReturn(this,_getPrototypeOf(CrossTabView).apply(this,arguments));}_createClass(CrossTabView,[{key:\"render\",value:function render(){return React.createElement(DataView,{elementId:\"crosstab\",survey:this.props.survey,data:this.props.data,selectedGroup:this.props.selectedGroup,selectedQuestion:this.props.selectedQuestion,renderFunction:this.renderCrossTabs});}},{key:\"renderCrossTabs\",value:function renderCrossTabs(elementId,selectedGroup,selectedQuestion,data){var cleanData=data.map(function(x){return{group:x[selectedGroup.id],response:x[selectedQuestion.id]||\" No Response\"};});if(selectedQuestion.numeric){$(\"#\".concat(elementId)).pivot(cleanData,{rows:[\"group\"],aggregator:$.pivotUtilities.aggregators[\"Average\"]([\"response\"])});}else{$(\"#\".concat(elementId)).pivot(cleanData,{rows:[\"group\"],cols:[\"response\"],aggregator:$.pivotUtilities.aggregators[\"Count\"]()});}}}]);return CrossTabView;}(React.Component);export{CrossTabView as default};","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/CrossTabView.js"],"names":["React","DataView","CrossTabView","props","survey","data","selectedGroup","selectedQuestion","renderCrossTabs","elementId","cleanData","map","x","group","id","response","numeric","$","pivot","rows","aggregator","pivotUtilities","aggregators","cols","Component"],"mappings":"45BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,GAEqBC,CAAAA,Y,0SACR,CACL,MAAO,qBAAC,QAAD,EACK,SAAS,CAAG,UADjB,CAEK,MAAM,CAAK,KAAKC,KAAL,CAAWC,MAF3B,CAGK,IAAI,CAAK,KAAKD,KAAL,CAAWE,IAHzB,CAIK,aAAa,CAAK,KAAKF,KAAL,CAAWG,aAJlC,CAKK,gBAAgB,CAAK,KAAKH,KAAL,CAAWI,gBALrC,CAMK,cAAc,CAAK,KAAKC,eAN7B,EAAP,CAQH,C,wDAEeC,S,CAAWH,a,CAAeC,gB,CAAkBF,I,CAAM,CAC9D,GAAIK,CAAAA,SAAS,CAAGL,IAAI,CAACM,GAAL,CAAS,SAACC,CAAD,CAAO,CAAE,MAAO,CAACC,KAAK,CAAGD,CAAC,CAACN,aAAa,CAACQ,EAAf,CAAV,CAA8BC,QAAQ,CAAGH,CAAC,CAACL,gBAAgB,CAACO,EAAlB,CAAD,EAA0B,cAAnE,CAAP,CAA2F,CAA7G,CAAhB,CACA,GAAGP,gBAAgB,CAACS,OAApB,CAA6B,CACzBC,CAAC,YAAKR,SAAL,EAAD,CAAmBS,KAAnB,CAAyBR,SAAzB,CACI,CACIS,IAAI,CAAG,CAAC,OAAD,CADX,CAEIC,UAAU,CAAEH,CAAC,CAACI,cAAF,CAAiBC,WAAjB,CAA6B,SAA7B,EAAwC,CAAC,UAAD,CAAxC,CAFhB,CADJ,EAKH,CAND,IAOK,CACDL,CAAC,YAAKR,SAAL,EAAD,CAAmBS,KAAnB,CAAyBR,SAAzB,CACI,CACIS,IAAI,CAAG,CAAC,OAAD,CADX,CAEII,IAAI,CAAE,CAAC,UAAD,CAFV,CAGIH,UAAU,CAAEH,CAAC,CAACI,cAAF,CAAiBC,WAAjB,CAA6B,OAA7B,GAHhB,CADJ,EAMH,CACJ,C,0BA7BqCtB,KAAK,CAACwB,S,SAA3BtB,Y","sourcesContent":["import React from 'react'\nimport DataView from './DataView'\n\nexport default class CrossTabView extends React.Component {\n    render() {\n        return <DataView \n                    elementId = \"crosstab\" \n                    survey = { this.props.survey }\n                    data = { this.props.data }\n                    selectedGroup = { this.props.selectedGroup }\n                    selectedQuestion = { this.props.selectedQuestion }\n                    renderFunction = { this.renderCrossTabs }\n                />\n    }\n\n    renderCrossTabs(elementId, selectedGroup, selectedQuestion, data) {\n        let cleanData = data.map((x) => { return {group : x[selectedGroup.id], response : x[selectedQuestion.id] || \" No Response\"} });\n        if(selectedQuestion.numeric) {\n            $(`#${elementId}`).pivot(cleanData, \n                {\n                    rows : [\"group\"],\n                    aggregator: $.pivotUtilities.aggregators[\"Average\"]([\"response\"])\n                });\n        }\n        else {\n            $(`#${elementId}`).pivot(cleanData, \n                {\n                    rows : [\"group\"],\n                    cols: [\"response\"],\n                    aggregator: $.pivotUtilities.aggregators[\"Count\"]()\n                });\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}