{"ast":null,"code":"import _classCallCheck from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import CrossTabView from'./CrossTabView';import ChartView from'./ChartView';import FieldSelect from'./FieldSelect';import{surveys,groups}from'../config/fields.json';var DataPage=/*#__PURE__*/function(_React$Component){_inherits(DataPage,_React$Component);function DataPage(){var _this;_classCallCheck(this,DataPage);_this=_possibleConstructorReturn(this,_getPrototypeOf(DataPage).call(this));_this.state={selectedGroup:undefined,selectedTopic:undefined,selectedQuestion:undefined};_this.handleGroupSelect=_this.handleGroupSelect.bind(_assertThisInitialized(_this));_this.handleTopicSelect=_this.handleTopicSelect.bind(_assertThisInitialized(_this));_this.handleQuestionSelect=_this.handleQuestionSelect.bind(_assertThisInitialized(_this));return _this;}_createClass(DataPage,[{key:\"componentWillMount\",value:function componentWillMount(){this.survey=surveys[this.props.surveyId];}},{key:\"render\",value:function render(){if(this.props.surveyId==null){throw new Error(\"Expected a survey id\");}return React.createElement(\"div\",{className:\"container\"},React.createElement(FieldSelect,{title:\"Group\",description:\"Select how you would like to group responses\",options:groups,selected:this.state.selectedGroup,handleSelect:this.handleGroupSelect}),React.createElement(FieldSelect,{title:\"Topic\",description:\"Select a topic that you would like to examine\",options:this.survey.topics,selected:this.state.selectedTopic,handleSelect:this.handleTopicSelect}),React.createElement(FieldSelect,{title:\"Question\",description:\"Select a question to examine\",options:this.state.selectedTopic?this.survey.topics[this.state.selectedTopic].questions:null,selected:this.state.selectedQuestion,handleSelect:this.handleQuestionSelect}),React.createElement(\"div\",{className:\"row\"},React.createElement(ChartView,{survey:this.survey,data:this.state.surveyData,selectedGroup:groups[this.state.selectedGroup],selectedQuestion:this.state.selectedQuestion?this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion]:null})),React.createElement(\"div\",{className:\"row\"},React.createElement(CrossTabView,{survey:this.survey,data:this.state.surveyData,selectedGroup:groups[this.state.selectedGroup],selectedQuestion:this.state.selectedQuestion?this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion]:null})));}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;d3.csv(\"\".concat(process.env.PUBLIC_URL,\"/data/data_\").concat(this.props.surveyId,\".csv\")).then(function(data){_this2.setState({surveyData:data});});}},{key:\"handleGroupSelect\",value:function handleGroupSelect(event){this.setState({selectedGroup:event.target.value});}},{key:\"handleTopicSelect\",value:function handleTopicSelect(event){this.setState({selectedTopic:event.target.value,selectedQuestion:undefined});}},{key:\"handleQuestionSelect\",value:function handleQuestionSelect(event){this.setState({selectedQuestion:event.target.value});}}]);return DataPage;}(React.Component);export{DataPage as default};","map":{"version":3,"sources":["/Users/Kevin/Documents/GitHub/Understanding-Economics.github.io/src/components/DataPage.js"],"names":["React","CrossTabView","ChartView","FieldSelect","surveys","groups","DataPage","state","selectedGroup","undefined","selectedTopic","selectedQuestion","handleGroupSelect","bind","handleTopicSelect","handleQuestionSelect","survey","props","surveyId","Error","topics","questions","surveyData","d3","csv","process","env","PUBLIC_URL","then","data","setState","event","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport CrossTabView from './CrossTabView'\nimport ChartView from './ChartView'\nimport FieldSelect from './FieldSelect'\nimport { surveys, groups } from '../config/fields.json'\n\nexport default class DataPage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedGroup : undefined,\n            selectedTopic : undefined,\n            selectedQuestion : undefined\n        }\n        this.handleGroupSelect = this.handleGroupSelect.bind(this);\n        this.handleTopicSelect = this.handleTopicSelect.bind(this);\n        this.handleQuestionSelect = this.handleQuestionSelect.bind(this); \n    }\n    componentWillMount() {\n        this.survey = surveys[this.props.surveyId];\n    }\n\n    render() {\n        if (this.props.surveyId == null) {\n            throw new Error(\"Expected a survey id\");\n        }\n        return (\n            <div className = \"container\">\n                <FieldSelect \n                    title = \"Group\"\n                    description = \"Select how you would like to group responses\"\n                    options = { groups }\n                    selected = {this.state.selectedGroup}\n                    handleSelect = {this.handleGroupSelect}\n                />\n                <FieldSelect\n                    title = \"Topic\"\n                    description = \"Select a topic that you would like to examine\"\n                    options = { this.survey.topics }\n                    selected = {this.state.selectedTopic}\n                    handleSelect = {this.handleTopicSelect}\n                />\n                <FieldSelect\n                    title = \"Question\"\n                    description = \"Select a question to examine\"\n                    options = {this.state.selectedTopic ? \n                        this.survey.topics[this.state.selectedTopic].questions :\n                        null\n                    }\n                    selected = {this.state.selectedQuestion}\n                    handleSelect = {this.handleQuestionSelect}\n                />\n                <div className = \"row\">\n                    <ChartView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n                <div className = \"row\">\n                    <CrossTabView\n                        survey = { this.survey } \n                        data = { this.state.surveyData }\n                        selectedGroup = { groups[this.state.selectedGroup] }\n                        selectedQuestion = { this.state.selectedQuestion ? \n                            this.survey.topics[this.state.selectedTopic].questions[this.state.selectedQuestion] : null\n                        } \n                    />\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount() {\n        d3.csv(`${process.env.PUBLIC_URL}/data/data_${this.props.surveyId}.csv`).then((data) => {\n          this.setState({\n            surveyData : data\n          })\n        });\n      }\n\n    handleGroupSelect(event) {\n        this.setState({\n            selectedGroup : event.target.value\n        })\n    }\n\n    handleTopicSelect(event) {\n        this.setState({\n            selectedTopic : event.target.value,\n            selectedQuestion : undefined\n        })\n    }\n    \n    handleQuestionSelect(event) {\n        this.setState({\n            selectedQuestion : event.target.value\n        })\n    }\n}\n\nDataPage.propTypes = {\n    survey : PropTypes.object\n}"]},"metadata":{},"sourceType":"module"}